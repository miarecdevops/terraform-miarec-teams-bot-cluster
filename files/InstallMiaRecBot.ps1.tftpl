# -------------------------------------
# Set System Environment variables
# -------------------------------------

# Below variables are necessary for Traefik to issue SSL certificates using DNS-Challenge
[System.Environment]::SetEnvironmentVariable('AZURE_TENANT_ID', '${azure_tenant_id}', [System.EnvironmentVariableTarget]::Machine)
[System.Environment]::SetEnvironmentVariable('AZURE_RESOURCE_GROUP', '${azure_resource_group}', [System.EnvironmentVariableTarget]::Machine)

# Traefik settings
[System.Environment]::SetEnvironmentVariable('BOT_FQDN', '${bot_fqdn}', [System.EnvironmentVariableTarget]::Machine)
[System.Environment]::SetEnvironmentVariable('BOT_SHARED_FQDN', '${bot_shared_fqdn}', [System.EnvironmentVariableTarget]::Machine)
# [System.Environment]::SetEnvironmentVariable('TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT', 'true', [System.EnvironmentVariableTarget]::Machine)
# [System.Environment]::SetEnvironmentVariable('TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL', '${letsencrypt_email}', [System.EnvironmentVariableTarget]::Machine)
# [System.Environment]::SetEnvironmentVariable('TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE', 'true', [System.EnvironmentVariableTarget]::Machine)
# [System.Environment]::SetEnvironmentVariable('TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_PROVIDER', 'azuredns', [System.EnvironmentVariableTarget]::Machine)

# Bot settings
[System.Environment]::SetEnvironmentVariable('AppSettings__ServiceDnsName', '${bot_fqdn}', [System.EnvironmentVariableTarget]::Machine)
[System.Environment]::SetEnvironmentVariable('AppSettings__MediaDnsName', '${bot_fqdn}', [System.EnvironmentVariableTarget]::Machine)

[System.Environment]::SetEnvironmentVariable('AzureKeyVaultName', '${key_valut_name}', [System.EnvironmentVariableTarget]::Machine)
[System.Environment]::SetEnvironmentVariable('AzureAppConfigEndpoint', '${app_config_endpoint}', [System.EnvironmentVariableTarget]::Machine)

# -------------------------------------
# Configure firewall
# -------------------------------------
New-NetFirewallRule -DisplayName 'HTTP' -Profile 'Public' -Direction Inbound -Action Allow -Protocol TCP -LocalPort 80
New-NetFirewallRule -DisplayName 'HTTPS' -Profile 'Public' -Direction Inbound -Action Allow -Protocol TCP -LocalPort 443


# -------------------------------------
# Create the installation directory if doesn't exist
# -------------------------------------
New-Item -ItemType Directory -Force -Path "${install_dir}"

# -------------------------------------
# Download Traefik
# -------------------------------------
Invoke-WebRequest -UseBasicParsing -Uri "${traefik_download_url}" -OutFile "${install_dir}/Traefik.zip"

# -------------------------------------
# Extract *.zip files
# -------------------------------------
Expand-Archive -path "${install_dir}/Traefik.zip" -destinationpath "${install_dir}"

# -------------------------------------
# Install Windows Service
# -------------------------------------
& "${install_dir}/Traefik/TraefikService.exe" -i
& "${install_dir}/Traefik/TraefikService.exe" -r

# -------------------------------------
# Download Visual C++ Redistributable
# -------------------------------------
Invoke-WebRequest -UseBasicParsing -Uri "${crt_download_url}" -OutFile "${install_dir}/VC_redist.x64.exe"
& "${install_dir}/VC_redist.x64.exe" /quiet /norestart

# -------------------------------------
# Download MiaRec Bot
# -------------------------------------
Invoke-WebRequest -UseBasicParsing -Uri "${bot_download_url}" -OutFile "${install_dir}/MiaRec.TeamsBot.zip"

# -------------------------------------
# Extract *.zip files
# -------------------------------------
Expand-Archive -path "${install_dir}/MiaRec.TeamsBot.zip" -destinationpath "${install_dir}"


# -------------------------------------
# Install Windows Service and start it
# Using our Service wrapper application because it is more robust.
# It will automatically restart the failed application and will keep trying indefinitely.
# Windows Service manager doesn't re-try to start the application if it failed the first time.
# -------------------------------------
& "${install_dir}/MiaRec.TeamsBot/MiaRec.TeamsBotService.exe" -i
& "${install_dir}/MiaRec.TeamsBot/MiaRec.TeamsBotService.exe" -r

